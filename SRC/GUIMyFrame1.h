#ifndef __GUIMyFrame1__
#define __GUIMyFrame1__

/**
@file
Subclass of MyFrame1, which is generated by wxFormBuilder.
*/

#include "GUI.h"

//// end generated include

#include <wx/dcmemory.h>
#include <wx/dcclient.h>
#include <wx/dcbuffer.h>
#include <wx/msgdlg.h>
#include <wx/filedlg.h>
#include <wx/log.h> 

#include <opencv2/imgcodecs.hpp>
#include <opencv2/highgui.hpp>
#include <opencv2/core/types_c.h>
#include <opencv2/core/core_c.h>
#include <opencv2/opencv.hpp>

//using namespace cimg_library;

/** Implementing MyFrame1 */
class GUIMyFrame1 : public MyFrame1
{
	protected:
		// Handlers for MyFrame1 events.
		void m_Window_update( wxUpdateUIEvent& event );
		void conversion_8bit_click( wxCommandEvent& event );
		void conversion_with_gamma_click( wxCommandEvent& event );
		void open_file_click( wxCommandEvent& event );
		void save_file_click( wxCommandEvent& event );
		void gamma_correction_scroll( wxScrollEvent& event );
		void m_b_choice_click(wxCommandEvent& event);
		void m_histogram_update(wxUpdateUIEvent& event);
		void m_histogram2_update(wxUpdateUIEvent& event);
	public:
		/** Constructor */
		GUIMyFrame1( wxWindow* parent );
	//// end generated class members

  void Repaint();
  cv::Mat &correctGamma(cv::Mat& img, double gamma);
  wxImage getImage(cv::Mat &img);
  void histogram_to_img(wxImage &img, wxBitmap &bitmap, int count[256], int r, int g, int b);
  void histogram_data(wxImage &img, int rgb[256]);
  void histogram_fun(wxScrolledWindow *window, wxImage &img);
 
  wxBitmap pBitmap, wxHistogtamBitmap;
  wxImage Img_tmp, Org, wxHistogramImg;

  cv::Mat image_org, result;
};

#endif // __GUIMyFrame1__
