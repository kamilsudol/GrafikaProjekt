#ifndef __GUIMyFrame1__
#define __GUIMyFrame1__

/**
@file
Subclass of MyFrame1, which is generated by wxFormBuilder.
*/

#include "GUI.h"

//// end generated include


#include <wx/dcmemory.h>
#include <wx/dcclient.h>
#include <wx/dcbuffer.h>
#include <wx/msgdlg.h>
#include <wx/filedlg.h>
#include <wx/log.h> 


#include <opencv2/imgcodecs.hpp>
#include <opencv2/highgui.hpp>
#include <opencv2/core/types_c.h>
#include <opencv2/core/core_c.h>
#include <opencv2/opencv.hpp>

//using namespace cimg_library;

/** Implementing MyFrame1 */
class GUIMyFrame1 : public MyFrame1
{
	protected:
		// Handlers for MyFrame1 events.
		void m_scrolledWindow_update( wxUpdateUIEvent& event );
		void conversion_8bit_click( wxCommandEvent& event );
		void conversion_with_gamma_click( wxCommandEvent& event );
		void open_file_click( wxCommandEvent& event );
		void save_file_click( wxCommandEvent& event );
		void gamma_correction_scroll( wxScrollEvent& event );
		void m_b_choice_click(wxCommandEvent& event);
		void m_histogram_update(wxUpdateUIEvent& event);
		void m_histogram2_update(wxUpdateUIEvent& event);
	public:
		/** Constructor */
		GUIMyFrame1( wxWindow* parent );
	//// end generated class members

	wxImage Img_Org; // tu bedzie przechowywany oryginalny obrazek

  void Repaint();

  cv::Mat &correctGamma(cv::Mat& img, double gamma);

  /////////////////////histogramy
  void generate_hist_img(wxImage &img, wxBitmap &bitmap, int count[256], int r, int g, int b);
  void calculateHistograms(wxImage &img, int rgb_count[256]);

  void histogram_fun(wxScrolledWindow*, wxImage);
  wxImage getImage(cv::Mat &);
 
  wxBitmap pBitmap;//do wyswietlania korekcji gamma
  wxImage pWxImg;//do korekcji gamma


  cv::Mat image;
  cv::Mat result;

  //////////////histogramy
  //Histograms
  //bool histogramsGenerated = false;
  wxImage imgHistogramRGB;
  wxBitmap bitMapHistogramRGB;

  wxImage imgHistogramRGB_n;
  wxBitmap bitMapHistogramRGB_n;

};

#endif // __GUIMyFrame1__
